{'description': None, 'argument_default': None, 'prefix_chars': '-', 'conflict_handler': 'error', '_registries': {'action': {None: <class 'argparse._StoreAction'>, 'store': <class 'argparse._StoreAction'>, 'store_const': <class 'argparse._StoreConstAction'>, 'store_true': <class 'argparse._StoreTrueAction'>, 'store_false': <class 'argparse._StoreFalseAction'>, 'append': <class 'argparse._AppendAction'>, 'append_const': <class 'argparse._AppendConstAction'>, 'count': <class 'argparse._CountAction'>, 'help': <class 'argparse._HelpAction'>, 'version': <class 'argparse._VersionAction'>, 'parsers': <class 'argparse._SubParsersAction'>}, 'type': {None: <function ArgumentParser.__init__.<locals>.identity at 0x10ce207b8>}}, '_actions': [_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), _StoreAction(option_strings=[], dest='interface', nargs=None, const=None, default=None, type=None, choices=None, help='Interface to listen for traffic on.', metavar='INTERFACE'), _StoreAction(option_strings=['-t', '--timeout'], dest='timeout', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, help='Time to capture for (in seconds). If set to 0 or\n                    unspecified, ^C must be sent to close the program.', metavar=None), _StoreAction(option_strings=['-o', '--outfile'], dest='outfile', nargs=None, const=None, default=None, type=None, choices=None, help='Write wireshark-readable pcapng to a file.', metavar='OUTFILE'), _StoreTrueAction(option_strings=['-x', '--hexdump'], dest='hexdump', nargs=0, const=True, default=False, type=None, choices=None, help='Write hexdump to stdout.', metavar=None), _StoreAction(option_strings=['-f', '--filter'], dest='filter', nargs='+', const=None, default=None, type=None, choices=['Ethernet', 'ARP', 'IP', 'TCP', 'UDP'], help='Write human-readable output for the specified protocol(s) to stdout.', metavar=None)], '_option_string_actions': {'-h': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), '--help': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), '-t': _StoreAction(option_strings=['-t', '--timeout'], dest='timeout', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, help='Time to capture for (in seconds). If set to 0 or\n                    unspecified, ^C must be sent to close the program.', metavar=None), '--timeout': _StoreAction(option_strings=['-t', '--timeout'], dest='timeout', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, help='Time to capture for (in seconds). If set to 0 or\n                    unspecified, ^C must be sent to close the program.', metavar=None), '-o': _StoreAction(option_strings=['-o', '--outfile'], dest='outfile', nargs=None, const=None, default=None, type=None, choices=None, help='Write wireshark-readable pcapng to a file.', metavar='OUTFILE'), '--outfile': _StoreAction(option_strings=['-o', '--outfile'], dest='outfile', nargs=None, const=None, default=None, type=None, choices=None, help='Write wireshark-readable pcapng to a file.', metavar='OUTFILE'), '-x': _StoreTrueAction(option_strings=['-x', '--hexdump'], dest='hexdump', nargs=0, const=True, default=False, type=None, choices=None, help='Write hexdump to stdout.', metavar=None), '--hexdump': _StoreTrueAction(option_strings=['-x', '--hexdump'], dest='hexdump', nargs=0, const=True, default=False, type=None, choices=None, help='Write hexdump to stdout.', metavar=None), '-f': _StoreAction(option_strings=['-f', '--filter'], dest='filter', nargs='+', const=None, default=None, type=None, choices=['Ethernet', 'ARP', 'IP', 'TCP', 'UDP'], help='Write human-readable output for the specified protocol(s) to stdout.', metavar=None), '--filter': _StoreAction(option_strings=['-f', '--filter'], dest='filter', nargs='+', const=None, default=None, type=None, choices=['Ethernet', 'ARP', 'IP', 'TCP', 'UDP'], help='Write human-readable output for the specified protocol(s) to stdout.', metavar=None)}, '_action_groups': [], '_mutually_exclusive_groups': [<argparse._MutuallyExclusiveGroup object at 0x10e27eac8>], '_defaults': {}, '_negative_number_matcher': re.compile('^-\\d+$|^-\\d*\\.\\d+$'), '_has_negative_number_optionals': [], 'title': None, '_group_actions': [_StoreAction(option_strings=['-o', '--outfile'], dest='outfile', nargs=None, const=None, default=None, type=None, choices=None, help='Write wireshark-readable pcapng to a file.', metavar='OUTFILE'), _StoreTrueAction(option_strings=['-x', '--hexdump'], dest='hexdump', nargs=0, const=True, default=False, type=None, choices=None, help='Write hexdump to stdout.', metavar=None), _StoreAction(option_strings=['-f', '--filter'], dest='filter', nargs='+', const=None, default=None, type=None, choices=['Ethernet', 'ARP', 'IP', 'TCP', 'UDP'], help='Write human-readable output for the specified protocol(s) to stdout.', metavar=None)], 'required': False, '_container': ArgumentParser(prog='sniffles', usage=None, description='Sniff packets.\n                    Use on a Linux machine with construct 2.9.39.', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)}
